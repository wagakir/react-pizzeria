{"version":3,"file":"static/js/825.6516fdc2.chunk.js","mappings":"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","sources":["webpack://react-pizzeria/./src/components/CartItem/CartItem.module.scss?48ee","components/CartItem/index.tsx","webpack://react-pizzeria/./src/pages/Cart/Cart.module.scss?bc23","pages/Cart/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CartItem_item__hz8j1\",\"img\":\"CartItem_img__1955M\",\"title\":\"CartItem_title__S+0Y9\",\"space\":\"CartItem_space__D3Tlg\",\"info\":\"CartItem_info__rkJWO\",\"price\":\"CartItem_price__lohqy\",\"remove\":\"CartItem_remove__Xbxsj\"};","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styles from \"./CartItem.module.scss\";\r\nimport {\r\n  addItem,\r\n  removeItem,\r\n  incrementItem,\r\n} from \"../../redux/slices/cartSlice\";\r\ntype CartItemProps = {\r\n  count: number;\r\n  price: number;\r\n  title: string;\r\n  imageUrl: string;\r\n  type: string;\r\n  size: number;\r\n  id: number;\r\n};\r\nconst CartItem: React.FC<CartItemProps> = ({\r\n  count,\r\n  price,\r\n  title,\r\n  imageUrl,\r\n  type,\r\n  size,\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const onClickPlus = () => {\r\n    dispatch(addItem({ count, price, title, imageUrl, type, size, id }));\r\n  };\r\n  const onClickMinus = () => {\r\n    dispatch(incrementItem({ count, price, title, imageUrl, type, size, id }));\r\n  };\r\n  const onClickRemove = () => {\r\n    dispatch(removeItem({ count, price, title, imageUrl, type, size, id }));\r\n  };\r\n  return (\r\n    <div className={styles.item}>\r\n      <div className={styles.img}>\r\n        <img className=\"pizza-block__image\" src={imageUrl} alt=\"Pizza\" />\r\n      </div>\r\n      <div className={styles.title}>\r\n        <h3>{title}</h3>\r\n        <p>\r\n          {type}, {size} см.\r\n        </p>\r\n      </div>\r\n      <div className={styles.space}></div>\r\n      <ul className={styles.info}>\r\n        <div className={\"button outline circle\"} onClick={onClickMinus}>\r\n          <b>-</b>\r\n        </div>\r\n\r\n        <div>\r\n          <h2>{count}</h2>\r\n        </div>\r\n\r\n        <div className={\"button outline circle\"} onClick={onClickPlus}>\r\n          <b>+</b>\r\n        </div>\r\n\r\n        <div>\r\n          <h2>{price * count} ₽</h2>\r\n        </div>\r\n\r\n        <div className={styles.remove} onClick={onClickRemove}>\r\n          <div className=\"button outline circle\">\r\n            <svg\r\n              width=\"10\"\r\n              height=\"10\"\r\n              viewBox=\"0 0 10 10\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                fill=\"#EB5A1E\"\r\n              />\r\n              <path\r\n                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                fill=\"#EB5A1E\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.price}></div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cart\":\"Cart_cart__4Yknl\",\"top\":\"Cart_top__ypv29\",\"title\":\"Cart_title__EThb3\",\"bottom\":\"Cart_bottom__ksxhn\",\"details\":\"Cart_details__1AgPk\",\"buttons\":\"Cart_buttons__YQLGl\",\"goBackBtn\":\"Cart_goBackBtn__lJheM\",\"payBtn\":\"Cart_payBtn__rHdK-\"};","import React from \"react\";\r\nimport CartItem from \"../../components/CartItem\";\r\nimport styles from \"./Cart.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearItems } from \"../../redux/slices/cartSlice\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../../redux/store\";\r\ntype CartItemProps = {\r\n  count: number;\r\n  price: number;\r\n  title: string;\r\n  imageUrl: string;\r\n  type: string;\r\n  size: number;\r\n  id: number;\r\n};\r\nconst Cart: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { items, totalPrice } = useSelector((state: RootState) => state.cart);\r\n  const totalCount = items.reduce(\r\n    (sum: number, obj: { count: number }) => sum + obj.count,\r\n    0\r\n  );\r\n  if (!totalPrice) {\r\n    return (\r\n      <>\r\n        <center>\r\n          <Link to=\"/\">\r\n            <h1>Добавьте хоть одну пиццу</h1>\r\n          </Link>\r\n          <br />\r\n          <h2> вам же нечего будет есть ._. </h2>\r\n        </center>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={styles.cart}>\r\n        <div className={styles.top}>\r\n          <h2 className={styles.title}>\r\n            <svg\r\n              width=\"18\"\r\n              height=\"18\"\r\n              viewBox=\"0 0 18 18\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"1.8\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"1.8\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"1.8\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n            Корзина\r\n          </h2>\r\n          <div\r\n            onClick={() => {\r\n              if (window.confirm(\"Отчистить корзину?\")) {\r\n                dispatch(clearItems());\r\n              }\r\n            }}\r\n          >\r\n            <svg\r\n              width=\"20\"\r\n              height=\"20\"\r\n              viewBox=\"0 0 20 20\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M2.5 5H4.16667H17.5\"\r\n                stroke=\"#B6B6B6\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                stroke=\"#B6B6B6\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M8.33337 9.16667V14.1667\"\r\n                stroke=\"#B6B6B6\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M11.6666 9.16667V14.1667\"\r\n                stroke=\"#B6B6B6\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n\r\n            <span>Очистить корзину</span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {items.map((obj: CartItemProps, index: number) => (\r\n            <CartItem {...obj} key={index} />\r\n          ))}\r\n        </div>\r\n        <div className={styles.bottom}>\r\n          <div className={styles.details}>\r\n            <span>\r\n              Всего пицц: <b>{totalCount} шт.</b>\r\n            </span>\r\n            <span>\r\n              Сумма заказа: <b>{totalPrice} ₽</b>\r\n            </span>\r\n          </div>\r\n          <div className={styles.buttons}>\r\n            <a href=\"/\" className={\"button outline add \" + styles.goBackBtn}>\r\n              <svg\r\n                width=\"8\"\r\n                height=\"14\"\r\n                viewBox=\"0 0 8 14\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M7 13L1 6.93015L6.86175 1\"\r\n                  stroke=\"#D3D3D3\"\r\n                  strokeWidth=\"1.5\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n\r\n              <span>Вернуться назад</span>\r\n            </a>\r\n            <div className={\"button outline add\" + styles.payBtn}>\r\n              <span>Оплатить сейчас</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default Cart;\r\n"],"names":["_ref","count","price","title","imageUrl","type","size","id","dispatch","useDispatch","_jsxs","className","styles","children","_jsx","src","alt","onClick","onClickMinus","incrementItem","onClickPlus","addItem","onClickRemove","removeItem","width","height","viewBox","fill","xmlns","d","Cart","items","totalPrice","useSelector","state","cart","totalCount","reduce","sum","obj","stroke","strokeWidth","strokeLinecap","strokeLinejoin","window","confirm","clearItems","map","index","_createElement","CartItem","key","href","_Fragment","Link","to"],"sourceRoot":""}